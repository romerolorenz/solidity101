const Web3 = require('web3');
const config = require('./config/config');
const web3 = new Web3(new Web3.providers.HttpProvider(config.chain.httpProvider));

let helloworldContract = web3.eth.contract([{ "constant": true, "inputs": [], "name": "getSenders", "outputs": [{ "name": "_senders", "type": "address[]" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "indexOfSenders", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "SavedMessages", "outputs": [{ "name": "message", "type": "string" }, { "name": "timeStamp", "type": "uint256" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getMessage", "outputs": [{ "name": "_message", "type": "string" }], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [{ "name": "_message", "type": "string" }], "name": "saveMessage", "outputs": [{ "name": "_success", "type": "bool" }], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": false, "name": "_from", "type": "address" }, { "indexed": false, "name": "_message", "type": "string" }, { "indexed": false, "name": "_timeStamp", "type": "uint256" }], "name": "SaveMessage", "type": "event" }]);
let helloworld = helloworldContract.new(
  {
    from: web3.eth.accounts[0],
    data: '0x608060405234801561001057600080fd5b5060008090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061090d806100866000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063128e042314610072578063621ebb25146100de578063cd94d30a14610135578063ce6d41de146101f8578063fc0c4f2e14610288575b600080fd5b34801561007e57600080fd5b50610087610309565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156100ca5780820151818401526020810190506100af565b505050509050019250505060405180910390f35b3480156100ea57600080fd5b5061011f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610397565b6040518082815260200191505060405180910390f35b34801561014157600080fd5b50610176600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103af565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156101bc5780820151818401526020810190506101a1565b50505050905090810190601f1680156101e95780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561020457600080fd5b5061020d61046b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561024d578082015181840152602081019050610232565b50505050905090810190601f16801561027a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029457600080fd5b506102ef600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610553565b604051808215151515815260200191505060405180910390f35b6060600080548060200260200160405190810160405280929190818152602001828054801561038d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610343575b5050505050905090565b60016020528060005260406000206000915090505481565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561045b5780601f106104305761010080835404028352916020019161045b565b820191906000526020600020905b81548152906001019060200180831161043e57829003601f168201915b5050505050908060010154905082565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b505050505091505090565b600061055d610822565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f416c726561647920726567697374657265642061206d6573736167650000000081525060200191505060405180910390fd5b8281600001819052504281602001818152505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061068392919061083c565b5060208201518160010155905050600080549050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507f8e7ca30ad33c2b3a2c2b064453842c3aa34901860a5911db7f72d7ed278c9053338442604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156107dc5780820151818401526020810190506107c1565b50505050905090810190601f1680156108095780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a16001915050919050565b604080519081016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061087d57805160ff19168380011785556108ab565b828001600101855582156108ab579182015b828111156108aa57825182559160200191906001019061088f565b5b5090506108b891906108bc565b5090565b6108de91905b808211156108da5760008160009055506001016108c2565b5090565b905600a165627a7a72305820c558554b46a6157ad4554c674b0234777cfddfe375e12fbc3683203872a20a190029',
    gas: '4700000'
  }, function (e, contract) {
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
      console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
  })